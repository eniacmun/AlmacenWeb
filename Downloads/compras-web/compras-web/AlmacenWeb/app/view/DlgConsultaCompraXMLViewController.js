/*
 * File: app/view/DlgConsultaCompraXMLViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('almacen.view.DlgConsultaCompraXMLViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.dlgconsultacompraxml',

    control: {
        "#cmbTEstado1": {
            afterrender: 'loadEstados',
            beforequery: 'filtraEstados'
        },
        "#wndConsultaPedidos": {
            afterrender: 'initConsulta'
        },
        "button#btnFiltrar1": {
            click: 'ConsultarTraspasos'
        },
        "button#btnPendientes3": {
            click: 'consultarPendientes'
        },
        "button#btnCancela3": {
            click: 'CancelaTraspaso'
        },
        "button#btnRecibe3": {
            click: 'RecibeTraspaso'
        }
    },

    loadEstados: function(component, eOpts) {
        var request = new Object(); request.method="estadospedidos"; request.params=[];
                                    request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                                    almacen.getApplication().loadData(request,function(response){
                                        component.getStore().loadData(response.items);
                                        component.getStore().sort('label','ASC');
                                        //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
                                    });
    },

    filtraEstados: function(queryPlan, eOpts) {
         queryPlan.query = new RegExp(queryPlan.query, 'i');
         queryPlan.forceAll = true;
    },

    initConsulta: function(component, eOpts) {
        var currentController = this;
        var component = Ext.ComponentMgr.get("gridConsultaTraspasos3");
        component.getStore().removeAll();
        window.setTimeout(function(){currentController.loadConsultaTraspasos(null,null,null);}, 2000);
    },

    ConsultarTraspasos: function(button, e, eOpts) {
        var dtInicial = Ext.ComponentMgr.get("dtTInicial3");
        var dtFinal = Ext.ComponentMgr.get("dtTFinal3");
        var cmbEstado = Ext.ComponentMgr.get("cmbTEstado3");
        if (dtInicial.isValid() && dtFinal.isValid()){ //los 2 campos de fechas deben ser válidos
            var pFechaInicial = dtInicial.getRawValue();
            var pFechaFinal = dtFinal.getRawValue();
            var pEstado;
            if (cmbEstado.isValid()){
                pEstado = cmbEstado.getValue();
            }
            //var pFiltroFecha = "TO_DATE('" + pFechaInicial + "', 'DD/MM/YYYY')" + "|TO_DATE('" + pFechaFinal + "', 'DD/MM/YYYY')";;
            this.loadConsultaTraspasos(pEstado, pFechaInicial, pFechaFinal);
        }else{
            Ext.Msg.alert('', 'Por favor especifique un filtro antes de realizar la búsqueda.');
        }

    },

    consultarPendientes: function(button, e, eOpts) {
        this.loadConsultaTraspasos(null,null, null);
    },

    CancelaTraspaso: function(button, e, eOpts) {

        var currentController=this;
        Ext.Msg.confirm("Cancelar Pedido", "¿Desea cancelar la factura seleccionada?",
                        function(buttonId){
                            if (buttonId == 'yes'){
                                var winBusquedaCompra = Ext.WindowManager.get("wndConsultaComprasXML");
                                var el = winBusquedaCompra.getEl();
                                el.mask('Cancelando pedido, por favor espere');
                                var request = new Object(); request.method="cancelafacturaimportar"; request.params=[];
                                request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                                request.params.push({"name":"factura","value":Ext.encode(button.currentRecord)});
                                almacen.getApplication().loadData(request,function(response){
                                    el.unmask();
                                    currentController.loadConsultaTraspasos(null,null,null);
                                    //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
                                });
                            }
                        });
    },

    RecibeTraspaso: function(button, e, eOpts) {
        var currentController=this;
        Ext.Msg.confirm("Recibir Pedido", "¿Desea importar la factura seleccionada?",
                        function(buttonId){
                            if (buttonId == 'yes'){
                                var winBusquedaCompra = Ext.WindowManager.get("wndConsultaComprasXML");
                                winBusquedaCompra.currentController.ProcesaCompraXML(button.currentRecord);
                                winBusquedaCompra.close();
                            }
                        });
    },

    loadConsultaTraspasos: function(FiltroEstado,FechaInicial,FechaFinal, pedido) {

        var winBusquedaCompra = Ext.WindowManager.get("wndConsultaComprasXML");
        var el = winBusquedaCompra.getEl();
        el.mask('Realizando consulta, por favor espere');
        var request = new Object(); request.method="consultafacturasimportar"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});

        if (FiltroEstado)request.params.push({"name":"filtroEstado","value":FiltroEstado});
        if (FechaInicial)request.params.push({"name":"filtroFechaInicial","value":FechaInicial});
        if (FechaFinal)request.params.push({"name":"filtroFechaFinal","value":FechaFinal});
        var component = Ext.ComponentMgr.get("gridConsultaTraspasos3");
        component.getStore().removeAll();
        almacen.getApplication().loadData(request,function(response){
            component.getStore().loadData(response.facturas);
            el.unmask();
            //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
        },function(response){
            el.unmask();

        });
    },

    onGridConsultaTraspasos3AfterRender: function(component, eOpts) {
        var currentController = this;
        var component = Ext.ComponentMgr.get("gridConsultaTraspasos3");
        component.getStore().removeAll();
        window.setTimeout(function(){currentController.loadConsultaTraspasos(null,null,null);}, 2000);
    },

    onBtnFiltrar3Click: function(button, e, eOpts) {
        this.ConsultarTraspasos(button,e,eOpts);
    }

});
