/*
 * File: app/view/DlgConsultaTraspasosViewController2.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('almacen.view.DlgConsultaTraspasosViewController2', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.dlgconsultatraspasos2',

    control: {
        "#cmbTEstado2": {
            afterrender: 'loadEstados',
            beforequery: 'filtraEstados'
        },
        "#wndConsultaPedidos2": {
            afterrender: 'initConsulta'
        },
        "button#btnFiltrar2": {
            click: 'ConsultarTraspasos'
        },
        "button#btnPendientes2": {
            click: 'consultarPendientes'
        },
        "button#btnCancela2": {
            click: 'CancelaTraspaso'
        },
        "button#btnRecibe2": {
            click: 'RecibeTraspaso'
        },
        "button#btnFinaliza2": {
            click: 'FinalizaTraspasos'
        },
        "button#btnAprobar2": {
            click: 'AprobarTraspasos'
        },
        "button#btnReimprimir2": {
            click: 'ReimprimirTraspaso'
        },
        "button#btnDetalle2": {
            click: 'showDetail'
        }
    },

    loadEstados: function(component, eOpts) {

        var request = new Object(); request.method="estadospedidos"; request.params=[];
                                    request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                                    almacen.getApplication().loadData(request,function(response){
                                        component.getStore().loadData(response.items);
                                        component.getStore().sort('label','ASC');
                                        //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
                                    });
    },

    filtraEstados: function(queryPlan, eOpts) {
        console.log("yeah");
        queryPlan.query = new RegExp(queryPlan.query, 'i');
         queryPlan.forceAll = true;
    },

    initConsulta: function(component, eOpts) {
        console.log("initConsulta");
        var currentController = this;
        var component = Ext.ComponentMgr.get("gridConsultaTraspasos2");
        component.getStore().removeAll();
        window.setTimeout(function(){currentController.loadConsultaTraspasos(null,null);}, 2000);
    },

    ConsultarTraspasos: function(button, e, eOpts) {
        var dtInicial = Ext.ComponentMgr.get("dtTInicial2");
        var dtFinal = Ext.ComponentMgr.get("dtTFinal2");
        var cmbEstado = Ext.ComponentMgr.get("cmbTEstado2");
        if (dtInicial.isValid() && dtFinal.isValid()){ //los 2 campos de fechas deben ser válidos
            var pFechaInicial = dtInicial.getRawValue();
            var pFechaFinal = dtFinal.getRawValue();
            var pEstado;
            if (cmbEstado.isValid()){
                pEstado = cmbEstado.getValue();
            }
            var pFiltroFecha = "TO_DATE('" + pFechaInicial + "', 'DD/MM/YYYY')" + "|TO_DATE('" + pFechaFinal + "', 'DD/MM/YYYY')";;
            this.loadConsultaTraspasos(pEstado, pFiltroFecha);
        }else{
            Ext.Msg.alert('', 'Por favor especifique un filtro antes de realizar la búsqueda.');
        }

    },

    consultarPendientes: function(button, e, eOpts) {
        this.loadConsultaTraspasos(null,null);
    },

    CancelaTraspaso: function(button, e, eOpts) {
        var currentController=this;
        Ext.Msg.confirm("Cancelar Pedido", "¿Desea cancelar el pedido " + button.currentRecord.clavePedido,
                        function(buttonId){
                            if (buttonId == 'yes'){
                                if(typeof almacen.getApplication().currentSession.habilitaCancelacionPassword !== 'undefined' && almacen.getApplication().currentSession.habilitaCancelacionPassword){
                                    var wnd = Ext.create("almacen.view.DlgValidaCancelaPedido", {id:"wndValidaCancelaPedido"});
                                    wnd.parentController= currentController; //this;
                                    wnd.button = button;
                                    wnd.center();
                                    wnd.show();
                                }else{
                                    currentController.cancelarTraspaso(button);
                                }
                            }
                        });
    },

    RecibeTraspaso: function(button, e, eOpts) {
        var currentController=this;

        Ext.Msg.confirm("Recibir Pedido", "¿Desea recibir el pedido " + button.currentRecord.clavePedido + "?",
                        function(buttonId){
                            if (buttonId == 'yes'){

                                if(button.currentRecord.pedidoCedi === true){
                                    currentController.recibeTraspaso(button, "14", eOpts);
                                }

                                if(button.currentRecord.pedidoCedi === false){ // para proveedor externo
                                    var winDelete =  Ext.create('Ext.window.Window', {
                                        title: 'Seleccione el método de PAGO',
                                        height: 160,
                                        width: 300,
                                        //layout: 'fit',
                                        modal:true,
                                        bodyPadding: 5,
                                        border: 2,
                                        buttons: [
                                            {
                                                text: 'CONFIRMAR',
                                                scale: 'medium',
                                                cls: 'btn-delete-yes',
                                                listeners: {
                                                    click: function() {
                                                        var combo = Ext.getCmp('comboTipoPagoExterno');
                                                        var comboFactura = Ext.getCmp('noFacturaProveedor');
                                                        console.log("comboFactura");
                                                        console.log(comboFactura);
                                                        if (combo.getValue()) {
                                                            button.currentRecord.claveNotaCedi = comboFactura.getValue();
                                                            currentController.recibeTraspaso(button, combo.getValue(), eOpts);
                                                            winDelete.close();
                                                            return;
                                                        }

                                                    }
                                                }
                                            }],

                                        items: [

                                            {
                                                xtype: 'combobox',
                                                //flex: 1,
                                                id: 'comboTipoPagoExterno',
                                                fieldLabel: 'Tipo Pago',
                                                //labelPad: 1,
                                                //labelWidth: 100,
                                                //width : 80,
                                                //height : 50,
                                                allowBlank: false,
                                                displayField: 'label',
                                                forceSelection: true,
                                                minChars: 2,
                                                queryMode: 'local',
                                                store: 'StoreGeneric',
                                                valueField: 'value',
                                                listeners :
                                                {
                                                    afterrender :  function(component, eOpts) {
                                                        var request = new Object(); request.method="tipospago"; request.params=[];
                                                        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                                                        almacen.getApplication().loadData(request,function(response){
                                                            component.getStore().loadData(response.items);
                                                            component.getStore().sort('nombreProveedor','ASC');
                                                            //component.getStore().fireEvent('load', component.getStore(), [], true, {});
                                                        });
                                                    }
                                                }
                                            },{
                                                xtype: 'numberfield',
                                                //flex: 1,
                                                minValue: 0,
                                                //anchor: '100%',
                                                fieldLabel: 'No. Factura',
                                                //labelPad: 1,
                                                //labelWidth: 100,
                                                //width : 80,
                                                //height : 50,
                                                value: 0,
                                                id: 'noFacturaProveedor'
                                            }
                                        ]
                                    }).show();
                                }
                            }
                        });
    },

    FinalizaTraspasos: function(button, e, eOpts) {
        var records = button.currentRecord.length;

        var currentController=this;

        if(typeof records === 'undefined'){// solo se esta por un  pedido


            Ext.Msg.confirm("Finalizar Pedido", "¿Desea finalizar el pedido " + button.currentRecord.clavePedido,
                            function(buttonId){
                                if (buttonId == 'yes'){
                                    var winBusquedaCompra = Ext.WindowManager.get("wndConsultaPedidos2");
                                    var el = winBusquedaCompra.getEl();
                                    el.mask('Finalizando pedido, por favor espere');
                                    currentController.finalizaTraspaso(button.currentRecord, currentController);
                                }
                            });
        }else{
            //
            window.finalizadosErrores = [];
            window.finalizadosCorrectos = [];

            // se finalizaran varios pedidos
            var msg = "¿Desea finalizar los siguientes pedidos?";
            msg += "<table><tr><th>Sucursal</th><th>Pedido</th></tr>";
            var records = [];
            console.log(button.currentRecord);
            for(var id in button.currentRecord){
                var currentRecord = button.currentRecord[id].data;
                msg +=  "<tr><td>" + currentRecord.SucursalOrigen + "</td><td>" + currentRecord.clavePedido + "</td></tr>";
                records.push(currentRecord);
            }
            msg += "</table>";

            Ext.Msg.confirm("Finalizar Pedidos", msg,
                            function(buttonId){
                                if (buttonId == 'yes'){
                                    var winBusquedaCompra = Ext.ComponentMgr.get("gridConsultaTraspasos2");
                                    var el = winBusquedaCompra.getEl();
                                    var i = 0;
                                    currentController.finalizaTraspasoConcurrente(records, currentController, i, el);
                                }
                            });
        }
    },

    AprobarTraspasos: function(button, e, eOpts) {
        var currentController=this;
        Ext.Msg.confirm("Aprobar Pedido", "¿Desea aprobar el pedido " + button.currentRecord.clavePedido + "? <br>" +
                        "Una vez aprobado se recargará la pantalla inicial y perderá cualquier cambio realizado.",
                        function(buttonId){
                            if (buttonId == 'yes'){

                                console.log("has sido llamado");

                                var winDelete =  Ext.create('Ext.window.Window', {
                                    title: 'Seleccione el método de impresión',
                                    height: 150,
                                    width: 500,
                                    layout: 'fit',
                                    modal:true,
                                    bodyPadding: 20,
                                    border: 2,
                                    buttons: [
                                        {
                                            text: 'CONFIRMAR',
                                            scale: 'medium',
                                            cls: 'btn-delete-yes',
                                            listeners: {
                                                click: function() {

                                                    var radio1 = Ext.getCmp('radio1'),

                                                        radio2 = Ext.getCmp('radio2'),
                                                        radio3 = Ext.getCmp('radio3');
                                                    radio4 = Ext.getCmp('radio4');

                                                    //if L is selected, change to M
                                                    if (radio1.getValue()) {
                                                        currentController.aprobarPedido(0, currentController, button);
                                                        winDelete.close();
                                                        return;
                                                    }

                                                    //if XL is selected, change to L
                                                    if (radio2.getValue()) {
                                                        currentController.aprobarPedido(1, currentController, button);
                                                        winDelete.close();
                                                        return;
                                                    }

                                                    //if XL is selected, change to L
                                                    if (radio3.getValue()) {
                                                        currentController.aprobarPedido(2, currentController, button);
                                                        winDelete.close();
                                                        return;
                                                    }

                                                    //if XL is selected, change to L
                                                    if (radio4.getValue()) {
                                                        currentController.aprobarPedido(-1, currentController, button);
                                                        winDelete.close();
                                                        return;
                                                    }

                                                }
                                            }
                                        }, '->',
                                        {
                                            text: 'CANCELAR',
                                            scale: 'medium',
                                            cls: 'btn-delete-no',
                                            listeners: {
                                                click: function() {
                                                    winDelete.close();
                                                }
                                            }
                                        }
                                    ],
                                    items: [
                                        {
                                            xtype      : 'fieldcontainer',
                                            fieldLabel : '',
                                            defaultType: 'radiofield',
                                            defaults: {
                                                flex: 1
                                            },
                                            layout: 'hbox',
                                            items: [
                                                {
                                                    boxLabel  : 'PDF',
                                                    checked: true,
                                                    name      : 'size',
                                                    inputValue: '0',
                                                    id        : 'radio1'
                                                }, {
                                                    boxLabel  : 'EXCEL',
                                                    name      : 'size',
                                                    inputValue: 'l',
                                                    id        : 'radio2'
                                                }, {
                                                    boxLabel  : 'PDF y EXCEL',
                                                    name      : 'size',
                                                    inputValue: '2',
                                                    id        : 'radio3'
                                                }, {
                                                    boxLabel  : 'Sin Impresion',
                                                    name      : 'size',
                                                    inputValue: '3',
                                                    id        : 'radio4'
                                                }
                                            ]
                                        }
                                    ]
                                }).show();



                            }
                        });
    },

    ReimprimirTraspaso: function(button, e, eOpts) {
        var currentController=this;
        Ext.Msg.confirm("Reimprimir Pedido", "¿Desea Reimprimir el pedido " + button.currentRecord.clavePedido,
                        function(buttonId){
                            if (buttonId == 'yes'){


                                if(button.currentRecord.pedidoCedi){

                                    var winDelete =  Ext.create('Ext.window.Window', {
                                        title: 'Seleccione el método de impresión',
                                        height: 150,
                                        width: 500,
                                        layout: 'fit',
                                        modal:true,
                                        bodyPadding: 20,
                                        border: 2,
                                        buttons: [
                                            {
                                                text: 'CONFIRMAR',
                                                scale: 'medium',
                                                cls: 'btn-delete-yes',
                                                listeners: {
                                                    click: function() {

                                                        var radio1 = Ext.getCmp('radio1'),
                                                            radio2 = Ext.getCmp('radio2'),
                                                            radio3 = Ext.getCmp('radio3');

                                                        //if L is selected, change to M
                                                        if (radio1.getValue()) {
                                                            currentController.reimprimirPedido(0, button);
                                                            winDelete.close();
                                                            return;
                                                        }

                                                        //if XL is selected, change to L
                                                        if (radio2.getValue()) {
                                                            currentController.reimprimirPedido(1, button);
                                                            winDelete.close();
                                                            return;
                                                        }

                                                        //if XL is selected, change to L
                                                        if (radio3.getValue()) {
                                                            currentController.reimprimirPedido(2, button);
                                                            winDelete.close();
                                                            return;
                                                        }

                                                    }
                                                }
                                            }, '->',
                                            {
                                                text: 'CANCELAR',
                                                scale: 'medium',
                                                cls: 'btn-delete-no',
                                                listeners: {
                                                    click: function() {
                                                        winDelete.close();
                                                    }
                                                }
                                            }
                                        ],
                                        items: [
                                            {
                                                xtype      : 'fieldcontainer',
                                                fieldLabel : '',
                                                defaultType: 'radiofield',
                                                defaults: {
                                                    flex: 1
                                                },
                                                layout: 'hbox',
                                                items: [
                                                    {
                                                        boxLabel  : 'PDF',
                                                        checked: true,
                                                        name      : 'size',
                                                        inputValue: '0',
                                                        id        : 'radio1'
                                                    }, {
                                                        boxLabel  : 'EXCEL',
                                                        name      : 'size',
                                                        inputValue: 'l',
                                                        id        : 'radio2'
                                                    }, {
                                                        boxLabel  : 'PDF y EXCEL',
                                                        name      : 'size',
                                                        inputValue: '2',
                                                        id        : 'radio3'
                                                    }
                                                ]
                                            }
                                        ]
                                    }).show();

                                }else{
                                    currentController.reimprimirPedido(0, button);
                                }

                            }
                        });
    },

    showDetail: function(button, e, eOpts) {
        /*var request = new Object(); request.method="consultapedidos"; request.params=[];
                request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                request.params.push({"name":"clavepedido","value":button.currentRecord.clavePedido});
                request.params.push({"name":"pedido","value":Ext.encode(button.currentRecord)});
                console.log("Pedido");
                console.log(Ext.encode(button.currentRecord));
                window.currentPedido = null;
                window.modificados = {}; // se define la variable que guardara los modificados en la ventana de detalles
                var component = Ext.ComponentMgr.get("gridConsultaTraspasos2");
                //component.getStore().removeAll();
                var currentController = this;
                almacen.getApplication().loadData(request,function(response){
                    window.currentPedido = response;
                    console.log("window.currentPedido"); console.log(window.currentPedido);
                    var wnd=Ext.create("almacen.view.DlgConsultaPedido1", {id:"wndDetallePedidos2",currentRecord:response});
                        wnd.parentController=currentController;
                        wnd.currentRecord=response;
                        wnd.center();
                        wnd.show();
                    //el.unmask();
                    //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
                },function(response){
                    el.unmask();

                });
        */

        this.mostrarDetalles(button.currentRecord);


    },

    loadConsultaTraspasos: function(FiltroEstado,FiltroFechas, pedido) {

        console.log("yeah??");
        var winBusquedaCompra = Ext.WindowManager.get("wndConsultaPedidos2");
        var el = winBusquedaCompra.getEl();
        el.mask('Realizando consulta, por favor espere');
        var request = new Object(); request.method="consultapedidos"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});

        if (FiltroEstado)request.params.push({"name":"filtroEstado","value":FiltroEstado});
        if (FiltroFechas)request.params.push({"name":"filtroFecha","value":FiltroFechas});
        var component = Ext.ComponentMgr.get("gridConsultaTraspasos2");
        component.getStore().removeAll();
        almacen.getApplication().loadData(request,function(response){
            console.log(response);
            component.getStore().loadData(response.pedidos);
            component.getStore().sort("fechaRegistro", "DESC");
            el.unmask();
            //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
        },function(response){
            el.unmask();

        });
    },

    reimprimirPedido: function(opcionImpresion, button) {
        var winBusquedaCompra = Ext.WindowManager.get("wndConsultaPedidos2");
        var el = winBusquedaCompra.getEl();
        el.mask('Reimprimiendo pedido, por favor espere');

        var request = new Object(); request.method="reprintpedido"; request.params=[];

        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"opcionImpresion","value":opcionImpresion});

        // Se copia el objeto para poder modificar la propiedad de fechaRegistro, pues es un date y necesita string
        var recordTemp = Object.assign({}, button.currentRecord);
        recordTemp.fechaRegistro = Ext.Date.format(new Date(recordTemp.fechaRegistro),'d/m/Y H:i:s');

        request.params.push({"name":"pedido","value":Ext.encode(recordTemp)});


        if(opcionImpresion === 2){

            request.params[1].value = 0;

            almacen.getApplication().loadData(request,function(response){
                //el.unmask();
                console.log(response);
                if(response.status){
                    almacen.getApplication().downloadPedido(response.filepath[0], 0);
                    Ext.Msg.alert('','Reimpresión correcta PDF');
                }else{
                    Ext.Msg.alert('','Reimpresión incorrecta. Cierre cualquier excel o archivo pdf que tenga abierto.');
                }
            });

            request.params[1].value = 1;

            almacen.getApplication().loadData(request,function(response){
                el.unmask();
                console.log(response);
                if(response.status){
                    almacen.getApplication().downloadPedido(response.filepath[0], 1);
                    Ext.Msg.alert('','Reimpresión correcta Excel');
                }else{
                    Ext.Msg.alert('','Reimpresión incorrecta. Cierre cualquier excel o archivo pdf que tenga abierto.');
                }
            });

        }else{

            almacen.getApplication().loadData(request,function(response){
                el.unmask();
                console.log(response);
                if(response.status){
                    almacen.getApplication().downloadPedido(response.filepath[0], opcionImpresion);
                }else{
                    Ext.Msg.alert('','Reimpresión incorrecta. Cierre cualquier excel o archivo pdf que tenga abierto.');
                }
            });
        }
    },

    mostrarDetalles: function(currentRecord) {

        var winBusquedaCompra = Ext.ComponentMgr.get("gridConsultaTraspasos2");
        var el = winBusquedaCompra.getEl();
        el.mask('Realizando consulta, por favor espere');

        var request = new Object(); request.method="consultapedidos"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"clavepedido","value":currentRecord.clavePedido});
        request.params.push({"name":"pedido","value":Ext.encode(currentRecord)});
        //console.log("Pedido");
        //console.log(currentRecord));
        window.currentPedido = null;
        window.modificados = {}; // se define la variable que guardara los modificados en la ventana de detalles
        var component = Ext.ComponentMgr.get("gridConsultaTraspasos2");
        //component.getStore().removeAll();
        var currentController = this;
        almacen.getApplication().loadData(request,function(response){
            el.unmask();
            window.currentPedido = response;
            console.log("response");
            console.log(response);
            if(window.currentPedido.pedidos.length == 1){
                console.log("window.currentPedido"); console.log(window.currentPedido);
                var wnd=Ext.create("almacen.view.DlgConsultaPedido1", {id:"wndDetallePedidos2",currentRecord:response});
                wnd.parentController=currentController;
                wnd.currentRecord=response;
                wnd.center();
                wnd.show();
            }
            if(window.currentPedido.pedidos.length === 0){
                Ext.Msg.alert("Alerta", "No se pudo obtener información del pedido. Aseguresé que cuente con conexión a internet");
            }
            if(window.currentPedido.pedidos.length > 1){
                Ext.Msg.alert("Alerta", "Se obtuvó más de un pedido.");
            }

            //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
        },function(response){
            el.unmask();

        });
    },

    ModificaTraspaso: function() {
        if (Ext.WindowManager.get("wndDetallePedidos2"))
            Ext.WindowManager.get("wndDetallePedidos2").close();

        this.loadConsultaTraspasos(null,null);

        // se verifica si la ventana viene de panelCedis
        if(Ext.ComponentMgr.get("gridContainer")){
            Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
        }
    },

    aprobarPedido: function(opcionImpresion, controller, button) {
        console.log("opcionImpresion" + opcionImpresion);
        var winBusquedaCompra = Ext.WindowManager.get("wndConsultaPedidos2");
                        var el = winBusquedaCompra.getEl();
                        el.mask('Aprobando pedido, por favor espere');
                        var request = new Object(); request.method="aprobarpedidocw"; request.params=[];
                        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                        request.params.push({"name":"opcionImpresion","value":opcionImpresion});
                        request.params.push({"name":"pedido","value":Ext.encode(button.currentRecord)});
                        console.log("request");console.log(request);
                        almacen.getApplication().loadData(request,function(response){
                            console.log("response");console.log(response);
                            el.unmask();
                            if(response.status){
                                 // descarga del archivo
                                // impresiones
                                archivos_por_imprimir = response.filepath;
                                console.log("archivos_por_imprimir");console.log(archivos_por_imprimir);

                                if(archivos_por_imprimir.length > 0){

                                    if(opcionImpresion != -1){

                                        if(opcionImpresion === 2){ //pdf
                                            console.log("Impresion de PDF y Excel");
                                            console.log(archivos_por_imprimir);

                                            var i = 0;                     //  set your counter to 1

                                            var myLoopBoth = function(){           //  create a loop function
                                                setTimeout(function () {    //  call a 3s setTimeout when the loop is called
                                                    var requestprint = new Object(); requestprint.method="printguardapedidos"; requestprint.params=[];
                                                    requestprint.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                                                    var curentFilepath = archivos_por_imprimir[i];
                                                    var str = curentFilepath;
                                                    var rootPdf = str.substring(0,  str.indexOf(","));
                                                    console.log("rootPdf");
                                                    console.log(rootPdf);
                                                    var rootXls = str.substring(str.indexOf(",")+1);
                                                    console.log("rootXls");
                                                    console.log(rootXls);

                                                    var paths = [];

                                                    paths.push(rootPdf);paths.push(rootXls);

                                                    var ii = 0;

                                                    var myInternalLoop = function(){
                                                        setTimeout(function(){
                                                            var requestprint = new Object(); requestprint.method="printguardapedidos"; requestprint.params=[];
                                                            requestprint.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                                                            var currentImpresion = paths[ii];
                                                            var tipoimpresion = ii;
                                                            almacen.getApplication().loadData(requestprint,function(response2){
                                                                console.log("imprimiendo: " +currentImpresion);
                                                                console.log("tipoimpresion: " +tipoimpresion);
                                                                almacen.getApplication().downloadPedido(currentImpresion, tipoimpresion);
                                                            });

                                                          ii++;

                                                          if(ii < paths.length){
                                                              myInternalLoop();
                                                           }
                                                        }, 2000);
                                                    };

                                            myInternalLoop();

                                            i++;                     //  increment the counter

                                            if (i < archivos_por_imprimir.length) {            //  if the counter < 10, call the loop function
                                                 myLoopBoth();             //  ..  again which will trigger another
                                            }                        //  ..  setTimeout()
                                       }, 5000);
                            };

                    myLoopBoth();                      //  start the loop

                }else{
                    console.log("henosssaquiii2");
                    console.log(archivos_por_imprimir);

                    var j = 0;                     //  set your counter to 1

                    var myLoop = function(){           //  create a loop function
                        setTimeout(function () {    //  call a 3s setTimeout when the loop is called
                            var requestprint = new Object(); requestprint.method="printguardapedidos"; requestprint.params=[];
                            requestprint.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                            var curentFilepath = archivos_por_imprimir[j];
                            almacen.getApplication().loadData(requestprint,function(response2){
                                console.log("imprimiendo: " + curentFilepath);
                                almacen.getApplication().downloadPedido(curentFilepath, opcionImpresion);
                            });

                            j++;                     //  increment the counter

                            if (j < archivos_por_imprimir.length) {            //  if the counter < 10, call the loop function
                                 myLoop();             //  ..  again which will trigger another
                            }                        //  ..  setTimeout()
                            }, 5000);
                    };

                    myLoop();                      //  start the loop

                }

                }
            }
                                    //



                                 controller.loadConsultaTraspasos(null,null); // falta aplicarle los filtros, si tiene filtros
                                   // controller.parentController.ActualizarInterfaz();
                                // se actualiza el grid principal
                                Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
                            }else{
                                controller.loadConsultaTraspasos(null,null);
                                Ext.Msg.alert('Problema al guardar el pedido', 'Es posible que otro usuario lo haya aprobado. \n Consulte los pedidos nuevamente.');


                            }

                        });
    },

    cancelarTraspaso: function(button) {
        var currentController=this;

        var winBusquedaCompra = Ext.WindowManager.get("wndConsultaPedidos2");
        var el = winBusquedaCompra.getEl();
        el.mask('Cancelando pedido, por favor espere');
        var request = new Object(); request.method="cancelapedido"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"pedido","value":Ext.encode(button.currentRecord)});
        almacen.getApplication().loadData(request,function(response){
            el.unmask();
            currentController.loadConsultaTraspasos(null,null);
            if (Ext.WindowManager.get("wndDetallePedidos2"))
                Ext.WindowManager.get("wndDetallePedidos2").close();
            // se actualiza el grid principal del panelCedis (si es que se esta), si se esta en DlgPedidos, se ignora
            if(Ext.ComponentMgr.get("gridContainer"))
                Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
        });
    },

    finalizaTraspaso: function(currentRecord, currentController) {
        var request = new Object(); request.method="finalizapedidos"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"pedido","value":Ext.encode(currentRecord)});
        almacen.getApplication().loadData(request,function(response){
            //el.unmask();
            console.log("response finaliza");console.log(response);
            console.log("response.filepath.length");console.log(response.filepath.length);
            if(response.filepath.length == 1){
                var currentFile = response.filepath[0];
                almacen.getApplication().downloadPedido(currentFile,0);
            }else{

            }
            currentController.loadConsultaTraspasos(null,null);
            if (Ext.WindowManager.get("wndDetallePedidos2"))
                Ext.WindowManager.get("wndDetallePedidos2").close();
            //Ext.ComponentMgr.get("comboProveedor").getPicker().loadMask.hide();
            Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
        });
    },

    finalizaTraspasoConcurrente: function(records, currentController, i, el) {
        if(i == records.length){ // Se itero todo.
            if(records.length == window.finalizadosCorrectos.length){
               el.unmask();
               Ext.Msg.alert("Pedidos","Se han finalizado sus pedidos");
               Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
               currentController.loadConsultaTraspasos(null,null);
            }else{
                var msg = "<table border='1' style='width:100%'><tr><th>Pedido</th><th>Estatus</th></tr>";
                for(var a = 0; a < records.length; a++){
                    if(typeof window.finalizadosCorrectos[a] !== 'undefined'){
                        var finalizado =window.finalizadosCorrectos[a];
                        msg += "<tr><td align='center'>" + window.finalizadosCorrectos[a].clavePedido + "</td><td align='center'>Finalizado</td></tr>";
                    }else{
                        msg += "<tr><td align='center'>" + records[a].clavePedido + "</td><td align='center'>Sin finalizar</td></tr>";
                    }

                }
                msg += "</table>";

                Ext.MessageBox.show({
                    title: 'Alerta',
                    message: "Hubo un error en los pedidos.<br><br>Los pedidos quedaron de la siguiente forma: <br><br>" + msg,
                    width: 300,
                    buttons: Ext.Msg.YES,
                    buttonText: {
                        yes: 'Aceptar'
                    },
                    fn :function(buttonId){
                        Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
                        currentController.loadConsultaTraspasos(null,null);
                    }
                });

            }

            return;
        }

        el.mask('Finalizando pedido ' +(i+1)+'/'+ records.length +', por favor espere');

        var currentRecord = records[i];

        //console.log("currentRecord");console.log(currentRecord);

        var request = new Object(); request.method="finalizapedidos"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"pedido","value":Ext.encode(currentRecord)});
        almacen.getApplication().loadData(request,function(response){
            //el.unmask();
            //console.log("response finaliza");console.log(response);
            //console.log("response.filepath.length");console.log(response.filepath.length);
            if(response.status){
                if(response.filepath.length == 1){ // se verifica si se genero el PDF.
                    var currentFile = response.filepath[0];
                    almacen.getApplication().downloadPedido(currentFile,0);
                }
            }//else{
               // window.finalizadosErrores.push(currentRecord);
            //}
            window.finalizadosCorrectos.push({
                "indice": i,
                "clavePedido": currentRecord.clavePedido,
                "msg": response.msg,
                "status": response.status
            }); // Indice del pedido hecho correctamente

            // Se llama recursivamente al metodo.
            currentController.finalizaTraspasoConcurrente(records, currentController, (i+1), el);

        }, function(response){
            // este mismo codigo va en la linea 754 de este metodo
            el.unmask();
            var msg = "<table border='1' style='width:100%'><tr><th>Pedido</th><th>Estatus</th></tr>";
            for(var a = 0; a < records.length; a++){
                if(typeof window.finalizadosCorrectos[a] !== 'undefined'){
                    var finalizado =window.finalizadosCorrectos[a];
                    msg += "<tr><td align='center'>" + window.finalizadosCorrectos[a].clavePedido + "</td><td align='center'>Finalizado</td></tr>";
                }else{
                    msg += "<tr><td align='center'>" + records[a].clavePedido + "</td><td align='center'>Sin finalizar</td></tr>";
                }

            }
            msg += "</table>";

            Ext.MessageBox.show({
                title: 'Alerta',
                message: "Hubo un error en el servidor.<br><br>Los pedidos quedaron de la siguiente forma: <br><br>" + msg,
                width: 300,
                buttons: Ext.Msg.YES,
                buttonText: {
                    yes: 'Aceptar'
                },
                fn :function(buttonId){
                    Ext.ComponentMgr.get("gridContainer").up().getController().ActualizarInterfaz();
                    currentController.loadConsultaTraspasos(null,null);
                }
            });

        });
    },

    recibeTraspaso: function(button, tipoPago, eOpts) {
        var grid = Ext.ComponentMgr.get("gridProductos2");

        if(grid){
            el_ = grid.getEl();
            el_.mask('Recibiendo pedido, por favor espere');
        }


        console.log("button recibeTraspaso");
        console.log(button);

        var currentController = Ext.ComponentMgr.get("gridConsultaTraspasos2").up().getController();
        var winBusquedaCompra = Ext.WindowManager.get("wndConsultaPedidos2");
        var el = winBusquedaCompra.getEl();
        if (eOpts != null && eOpts.wnd != null)
            el=eOpts.wnd.getEl();

        el.mask('Recibiendo pedido, por favor espere');

        var request = new Object(); request.method="recibepedido"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"pedido","value":Ext.encode(button.currentRecord)});
        request.params.push({"name":"tipoPago","value": tipoPago});

        console.log("request------------------");
        console.log(request);


        almacen.getApplication().loadData(request,function(response){
            console.log(response);
            el.unmask();
            currentController.loadConsultaTraspasos(null,null);
            if (Ext.WindowManager.get("wndDetallePedidos2"))
                Ext.WindowManager.get("wndDetallePedidos2").close();
            almacen.getApplication().downloadCompra(response.clave, "printcompra");
        },function(response){
            Ext.Msg.alert("",response.error);
            console.log(response);
            el.unmask();
        });
    }

});
