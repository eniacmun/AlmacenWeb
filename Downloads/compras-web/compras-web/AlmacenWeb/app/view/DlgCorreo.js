/*
 * File: app/view/DlgCorreo.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('almacen.view.DlgCorreo', {
    extend: 'Ext.window.Window',
    alias: 'widget.dlgCorreo',

    requires: [
        'almacen.view.DlgCorreoViewModel',
        'almacen.view.DlgCorreoViewController',
        'Ext.grid.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.field.Text',
        'Ext.grid.column.Check',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing'
    ],

    controller: 'dlgcorreo',
    viewModel: {
        type: 'dlgcorreo'
    },
    height: 240,
    width: 300,
    title: 'Enviar orden a correo electronico',
    modal: true,

    items: [
        {
            xtype: 'gridpanel',
            autoScroll: true,
            height: 200,
            id: 'gridCorreo',
            width: 320,
            store: 'StoreGeneric',
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            text: 'Agregar',
                            listeners: {
                                click: 'onButtonClick'
                            }
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'button',
                            width: 280,
                            text: 'Guardar pedido y enviar correos.',
                            listeners: {
                                click: 'onButtonGuardarPedidoCorreoClick'
                            }
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    draggable: false,
                    width: 270,
                    dataIndex: 'label',
                    hideable: false,
                    text: 'Email',
                    editor: {
                        xtype: 'textfield',
                        allowBlank: false,
                        vtype: 'email'
                    }
                },
                {
                    xtype: 'checkcolumn',
                    draggable: false,
                    hidden: true,
                    width: 30,
                    dataIndex: 'value',
                    hideable: false,
                    text: ''
                },
                {
                    xtype: 'actioncolumn',
                    draggable: false,
                    width: 30,
                    hideable: false,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                //Ext.ComponentMgr.get("gridCorreo").getStore().removeAt(rowIndex);
                                record.beginEdit();
                                record.set("value", (record.get("value") === 'true' ? 'false' : 'true'));
                                record.endEdit();
                                //record.commit();
                            },
                            getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                console.log(r);
                                if (r.get('value') === "true") {
                                    this.items[0].tooltip = 'Quitar';
                                    return 'icon-edit';
                                } else {
                                    this.items[0].tooltip = 'Agregar';
                                    return 'icon-del';
                                }
                            },
                            tooltip: 'edit'
                        }
                    ]
                }
            ],
            plugins: [
                {
                    ptype: 'cellediting'
                }
            ],
            listeners: {
                afterrender: 'onGridCorreoAfterRender'
            }
        }
    ]

});