/*
 * File: app/view/DlgPedidos.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('almacen.view.DlgPedidos', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.dlgpedidos',

    requires: [
        'almacen.view.DlgPedidosViewModel',
        'almacen.view.DlgPedidosViewController',
        'Ext.grid.Panel',
        'Ext.grid.column.Check',
        'Ext.form.field.Checkbox',
        'Ext.grid.filters.filter.Boolean',
        'Ext.grid.filters.filter.String',
        'Ext.grid.filters.filter.List',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.grid.filters.filter.Number',
        'Ext.form.field.ComboBox',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.grid.plugin.CellEditing',
        'Ext.grid.filters.Filters',
        'Ext.grid.feature.Summary',
        'Ext.form.Panel',
        'Ext.form.field.Date'
    ],

    config: {
        currency: '£'
    },

    controller: 'dlgpedidos',
    viewModel: {
        type: 'dlgpedidos'
    },
    height: 503,
    width: 1200,
    layout: 'border',
    title: 'Pedidos',

    items: [
        {
            xtype: 'gridpanel',
            region: 'center',
            id: 'gridCedis',
            title: 'Sugerido',
            titleCollapse: false,
            forceFit: true,
            store: 'StoreContenidoPedidos',
            columns: [
                {
                    xtype: 'checkcolumn',
                    dataIndex: 'Agregar',
                    tdCls: 'x-grid-cell-checkcolumn x-change-cell',
                    text: 'Agregar',
                    editor: {
                        xtype: 'checkboxfield'
                    },
                    filter: {
                        type: 'boolean'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    maxWidth: 150,
                    minWidth: 130,
                    dataIndex: 'claveproducto',
                    lockable: false,
                    tdCls: 'x-change-cell',
                    text: 'Clave',
                    filter: {
                        type: 'string'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    maxWidth: 300,
                    minWidth: 220,
                    width: '',
                    dataIndex: 'NombreProducto',
                    tdCls: 'x-change-cell',
                    text: 'Nombre',
                    filter: {
                        type: 'string'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    maxWidth: 100,
                    minWidth: 79,
                    width: 79,
                    dataIndex: 'Unidad',
                    tdCls: 'x-change-cell',
                    text: 'Unidad',
                    filter: {
                        type: 'list'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'unidadminima',
                    tdCls: 'x-change-cell',
                    text: 'Unidad Minima'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'unidadcedis',
                    tdCls: 'x-change-cell',
                    text: 'Unidad Cedis'
                },
                {
                    xtype: 'numbercolumn',
                    id: 'CantidadMinima',
                    style: 'background-color: #D8D8D8;font-weight: bold;',
                    dataIndex: 'CantidadMinima',
                    tdCls: 'editable',
                    text: 'Cantidad<br>(unidad mínima)',
                    format: '0,000.00000',
                    editor: {
                        xtype: 'numberfield',
                        selectOnFocus: true,
                        decimalPrecision: 5,
                        minValue: 0
                    },
                    filter: {
                        type: 'number'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    id: 'Cantidad',
                    minWidth: 80,
                    style: 'background-color: #D8D8D8;font-weight: bold;',
                    dataIndex: 'CantidadSucursal',
                    tdCls: 'editable',
                    text: 'Cantidad',
                    format: '0,000.00000',
                    editor: {
                        xtype: 'numberfield',
                        selectOnFocus: true,
                        decimalPrecision: 5,
                        minValue: 0
                    },
                    filter: {
                        type: 'number'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'Existencia',
                    tdCls: 'x-change-cell',
                    text: 'Existencia',
                    filter: {
                        type: 'number'
                    },
                    listeners: {
                        beforerender: 'onNumbercolumnBeforeRender'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'Tendencia',
                    tdCls: 'x-change-cell',
                    text: 'Tendencia',
                    filter: {
                        type: 'number'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'Minimo',
                    tdCls: 'x-change-cell',
                    text: 'Mínimo',
                    filter: {
                        type: 'number'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'Maximo',
                    tdCls: 'x-change-cell',
                    text: 'Máximo',
                    filter: {
                        type: 'number'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'Sugerido',
                    tdCls: 'x-change-cell',
                    text: 'Sugerido',
                    filter: {
                        type: 'number'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    width: '',
                    dataIndex: 'ConsumoSemanaPasada',
                    tdCls: 'x-change-cell',
                    text: '%Semana%'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'ConsumoPromedio',
                    tdCls: 'x-change-cell',
                    text: 'Consumo Prom.'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'VentaEsperada',
                    tdCls: 'x-change-cell',
                    text: 'Vta Esperada.'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return Ext.util.Format.number(value , '0.##%');
                    },
                    dataIndex: 'Descuento',
                    tdCls: 'x-change-cell',
                    text: 'Descuento',
                    editor: {
                        xtype: 'numberfield',
                        id: 'txtDescuentoProveedor',
                        selectOnFocus: true,
                        decimalPrecision: 4,
                        maxValue: 100,
                        minValue: 0,
                        listeners: {
                            change: 'onTxtDescuentoProveedorChange'
                        }
                    }
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        rec = this.columns[colIndex].getEditor().getStore().findRecord("Id", value);
                        if (rec){
                            return rec.get("Descripcion");
                        }else{
                            return value;
                        }
                    },
                    dataIndex: 'idTasa',
                    tdCls: 'x-change-cell',
                    text: 'IEPS',
                    editor: {
                        xtype: 'combobox',
                        id: 'cmbIepsPedido',
                        editable: false,
                        displayField: 'Descripcion',
                        queryMode: 'local',
                        store: 'StoreTasasIEPS',
                        valueField: 'Id',
                        listeners: {
                            beforequery: 'onCmbIepsPedidoBeforeQuery',
                            select: 'onCmbIepsPedidoSelect'
                        }
                    }
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        rec = this.columns[colIndex].getEditor().getStore().findRecord("value", value);
                        if (rec){
                            return rec.get("label");
                        }else{
                            return value;
                        }
                    },
                    dataIndex: 'Impuesto',
                    tdCls: 'x-change-cell',
                    text: 'Impuesto',
                    editor: {
                        xtype: 'combobox',
                        id: 'cmbImpuestoPedido',
                        editable: false,
                        displayField: 'label',
                        queryMode: 'local',
                        store: 'StoreComboImpuestos',
                        valueField: 'value',
                        listeners: {
                            beforequery: 'onCmbTasaPedidoBeforeQuery',
                            select: 'onCmbImpuestoPedidoSelect'
                        }
                    }
                },
                {
                    xtype: 'numbercolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return Ext.util.Format.currency(value);
                    },
                    align: 'right',
                    dataIndex: 'Costo',
                    tdCls: 'x-change-cell',
                    text: 'Precio',
                    format: '0,000.000',
                    filter: {
                        type: 'number'
                    },
                    editor: {
                        xtype: 'numberfield',
                        decimalPrecision: 3,
                        minValue: 0,
                        listeners: {
                            change: 'onPrecioChange'
                        }
                    }
                },
                {
                    xtype: 'numbercolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return  Ext.util.Format.currency(value);

                    },
                    align: 'right',
                    dataIndex: 'Importe',
                    tdCls: 'x-change-cell',
                    text: 'Importe',
                    filter: {
                        type: 'number'
                    }
                }
            ],
            viewConfig: {
                getRowClass: function(record, rowIndex, rowParams, store) {
                    if(typeof window.currentSelectedProveedor !== 'undefined'){
                        if (!window.currentSelectedProveedor.data.esCedi){
                            return record.data.Agregar ? "no-inventory" : "";
                        }
                        else{
                            return record.get("esInventariado") ? "" : "no-inventory";
                        }
                    }
                    else{
                        return record.get("esInventariado") ? "" : "no-inventory";
                    }

                }
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            hidden: true,
                            id: 'btnWndPedidosCerrar',
                            icon: 'resources/cancel-icon.png',
                            text: 'Cerrar Ventana'
                        },
                        {
                            xtype: 'button',
                            id: 'btnWndConsultarPedidos1',
                            icon: 'resources/Search.png',
                            text: 'Consultar Pedidos'
                        },
                        {
                            xtype: 'button',
                            id: 'btnSavePedido',
                            icon: 'resources/save.png',
                            text: 'Guardar'
                        }
                    ]
                }
            ],
            plugins: [
                {
                    ptype: 'cellediting',
                    pluginId: 'onEditProductos',
                    clicksToEdit: 1,
                    listeners: {
                        beforeedit: 'onCellEditingBeforeEdit',
                        edit: 'onCellEditingEdit'
                    }
                },
                {
                    ptype: 'gridfilters'
                }
            ],
            features: [
                {
                    ftype: 'summary',
                    dock: 'bottom'
                }
            ],
            listeners: {
                beforerender: 'onGridCedisBeforeRender',
                afterrender: 'onGridCedisAfterRender'
            }
        },
        {
            xtype: 'form',
            region: 'north',
            bodyPadding: 10,
            bodyStyle: 'background-color: #D9D8D8;',
            layout: {
                type: 'hbox',
                align: 'stretch',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'combobox',
                    autoEl: {
                        tag: 'div',
                        'data-qtip': 'Sucursal que pide.'
                    },
                    flex: 0,
                    id: 'cmbSucursal',
                    width: 228,
                    fieldLabel: '',
                    hideLabel: true,
                    allowBlank: false,
                    allowOnlyWhitespace: false,
                    emptyText: 'Sucursal',
                    displayField: 'nombreProveedor',
                    store: 'StoreProveedores',
                    valueField: 'claveProveedor'
                },
                {
                    xtype: 'checkboxfield',
                    id: 'enableProveedor',
                    fieldLabel: '',
                    boxLabel: 'Proveedor externo&nbsp',
                    listeners: {
                        beforerender: 'onEnableProveedorBeforeRender',
                        change: 'onEnableProveedorChange'
                    }
                },
                {
                    xtype: 'combobox',
                    tpl: '<tpl for="."> 	<tpl if = "{esCedi} && almacen.getApplication().currentSession.esCedi"> 		<div class="x-boundlist-item {esCedi}">{nombreProveedor}</div> 	<tpl else> 		<div class="x-boundlist-item false">{nombreProveedor}</div> 	</tpl> </tpl>',
                    id: 'cmbProveedorCedis',
                    width: 228,
                    fieldLabel: '',
                    allowBlank: false,
                    emptyText: 'Proveedor',
                    displayField: 'nombreProveedor',
                    queryMode: 'local',
                    store: 'SoreProveedoresCedis',
                    valueField: 'claveProveedor',
                    listeners: {
                        select: 'onCmbProveedorCedisSelect',
                        beforerender: 'onCmbProveedorCedisBeforeRender',
                        beforeselect: 'onCmbProveedorCedisBeforeSelect'
                    }
                },
                {
                    xtype: 'combobox',
                    autoEl: {
                        tag: 'div',
                        'data-qtip': 'Número de días para el cual hacer la estimación de venta.'
                    },
                    id: 'cmbDiasTendencia',
                    width: 128,
                    fieldLabel: '',
                    emptyText: 'Dias Tendencia',
                    displayField: 'label',
                    queryMode: 'local',
                    store: 'storeDiasTendencia',
                    valueField: 'value'
                },
                {
                    xtype: 'combobox',
                    autoEl: {
                        tag: 'div',
                        'data-qtip': 'Dias de operación que se toman para calcular el consumo promedio.'
                    },
                    id: 'cmbDiasConsumo',
                    width: 125,
                    fieldLabel: '',
                    emptyText: 'Dias Consumo',
                    displayField: 'label',
                    queryMode: 'local',
                    store: 'storeDiasConsumo',
                    valueField: 'value'
                },
                {
                    xtype: 'datefield',
                    id: 'dtRecepcionCedis',
                    width: 156,
                    fieldLabel: '',
                    allowBlank: false,
                    allowOnlyWhitespace: false,
                    emptyText: 'Fecha de Recepción',
                    format: 'd/m/Y'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 2,
                    dock: 'bottom',
                    height: 100,
                    style: 'background-color: #D9D8D8;',
                    width: 1200,
                    layout: {
                        type: 'hbox',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'container',
                            bodyStyle: 'background-color: #D9D8D8;',
                            disabledCls: 'my-disabled',
                            height: 80,
                            id: 'containerProductos',
                            width: 1000,
                            listeners: {
                                beforerender: 'onContainerBeforeRender',
                                afterrender: 'onContainerProductosAfterRender'
                            }
                        },
                        {
                            xtype: 'button',
                            height: 30,
                            id: 'btnAgregarProductosDlgPedidos',
                            width: 100,
                            text: 'Agregar',
                            listeners: {
                                click: 'onBtnAgregarProductosDlgPedidosClick'
                            }
                        }
                    ],
                    listeners: {
                        beforerender: 'onToolbarBeforeRender'
                    }
                },
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    style: 'background-color: #D9D8D8;',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'checkboxfield',
                            id: 'checkuncheckAll',
                            fieldLabel: '',
                            boxLabel: 'Seleccionar todos los productos',
                            listeners: {
                                change: 'onCheckuncheckAllChange'
                            }
                        },
                        {
                            xtype: 'combobox',
                            activarFiltroClasificacionesPadre: function() {
                                if ( Ext.ComponentMgr.get("cmbClasificacionPadre").getValue()!=-1){
                                    Ext.ComponentMgr.get("gridCedis").getStore().filter('clasificacionCedi',Ext.ComponentMgr.get("cmbClasificacionPadre").getValue());
                                }

                            },
                            desactivarFiltroClasificacionesPadre: function() {
                                if (Ext.ComponentMgr.get("cmbClasificacionPadre").getValue()==-1)
                                Ext.ComponentMgr.get("gridCedis").getStore().clearFilter();
                            },
                            id: 'cmbClasificacionPadre',
                            width: 230,
                            fieldLabel: '',
                            emptyText: 'Filtrar Clasificación Venta',
                            displayField: 'label',
                            store: 'StoreFiltroClasificacionPadre',
                            valueField: 'value',
                            listeners: {
                                select: 'onCmbClasificacionPadreSelect'
                            }
                        },
                        {
                            xtype: 'combobox',
                            activarFiltroClasificaciones: function() {
                                if (Ext.ComponentMgr.get("cmbClasificacion").getValue()!=-1){
                                    Ext.ComponentMgr.get("gridCedis").getStore().filter('clasificacionSucursal',Ext.ComponentMgr.get("cmbClasificacion").getValue());
                                }

                            },
                            desactivarFiltroClasificaciones: function() {
                                if (Ext.ComponentMgr.get("cmbClasificacion").getValue()==-1)
                                Ext.ComponentMgr.get("gridCedis").getStore().clearFilter();
                            },
                            id: 'cmbClasificacion',
                            fieldLabel: '',
                            emptyText: 'Filtrar Clasificación',
                            displayField: 'label',
                            store: 'StoreFiltroClasificacion',
                            valueField: 'value',
                            listeners: {
                                select: 'onCmbClasificacionSelect'
                            }
                        },
                        {
                            xtype: 'combobox',
                            id: 'cmbCantidadSugerida',
                            value: 'Sugerido',
                            emptyText: 'Usar Cantidad',
                            displayField: 'tipoCantidad',
                            queryMode: 'local',
                            store: 'StoreTiposPedido',
                            valueField: 'tipoCantidad'
                        },
                        {
                            xtype: 'button',
                            id: 'btnConsultarPedidos',
                            icon: 'resources/Search.png',
                            text: 'Consultar Productos'
                        }
                    ]
                }
            ]
        }
    ]

});