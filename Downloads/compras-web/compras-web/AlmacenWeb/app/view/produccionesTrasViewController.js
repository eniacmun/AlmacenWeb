/*
 * File: app/view/produccionesTrasViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('almacen.view.produccionesTrasViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.produccionestras',

    obtieneSeleccion: function() {
        var grid = Ext.ComponentMgr.get("gridProduccionesTras");
        if (grid.getSelection().length > 0)
            return grid.getSelection()[0];
        else
            return null;
    },

    muestraDialogoContenido: function(record) {
        ///cargamos los productos a producir
        var wnd = Ext.create("almacen.view.DlgContenidoProduccion", {
            id: "wndContenidoProduccion"
        });
        wnd.currentRecord=record.data;
        wnd.blankRecord= JSON.parse(JSON.stringify(record.data));
        wnd.parentController=this;
        wnd.center();
        wnd.show();
    },

    guardaProduccion: function(rec) {
        //guardaproduccion
        var currentController = this;
        var request = new Object(); request.method="guardaproduccion"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"platillo","value":rec.claveProducto});
        request.params.push({"name":"cantidadplatillo","value":rec.cantidadEsperada});
        request.params.push({"name":"estadocosto","value":rec.estadoCosto});
        request.params.push({"name":"claveempleado","value":rec.claveEmpleado});
        request.params.push({"name":"claveproductoventa","value":rec.claveProductoVenta});
        request.params.push({"name":"precioventa","value":rec.precioVenta});
        request.params.push({"name":"cantidadpago","value":rec.cantidadPago});
        request.params.push({"name":"tipopago","value":rec.tipoPago});

        almacen.getApplication().loadData(request,function(response){
            if (response){
                Ext.Msg.alert('', 'Produccion guardada Exitosamente');
                currentController.onGridProduccionesTrasAfterRender(Ext.ComponentMgr.get("gridProduccionesTras"),null);
                var wnd = Ext.WindowMgr.get("wndContenidoProduccion");
                if (wnd)
                    wnd.close();
            }else{
                Ext.Msg.alert('', 'Error al guardar Produccion');
            }
        });

    },

    terminaProduccion: function(rec) {
        //terminaproduccion
        var currentController = this;
        var request = new Object(); request.method="terminaproduccion"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"produccion","value":Ext.encode(rec)});
        almacen.getApplication().loadData(request,function(response){
            if (response){
                Ext.Msg.alert('', 'Produccion terminada Exitosamente');
                currentController.onGridProduccionesTrasAfterRender(Ext.ComponentMgr.get("gridProduccionesTras"),null);
                var wnd = Ext.WindowMgr.get("wndContenidoProduccion");
                if (wnd)
                    wnd.close();

                if(response.filepath){
                    if(response.filepath.length == 1){
                        var curentFilepath = response.filepath[0];
                        console.log("Archivo a descargar: " + curentFilepath);
                        if(curentFilepath !== ""){
                            //Ext.Msg.alert( "Se descargará su archivo.";
                            almacen.getApplication().downloadPedido(curentFilepath, 0); // 0 PDF 1 Excel 2 Ambos
                        }else{
                            Ext.Msg.alert("Error", "No se pudo generar su archivo, pero el ticket ha sido impreso.");
                        }
                    }
                }


            }else{
                Ext.Msg.alert('', 'Error al terminar Produccion');
            }
        });
    },

    eliminaProduccion: function(rec) {

    },

    imprimeProduccion: function(rec) {
        var currentController = this;
                var request = new Object(); request.method="imprimeproduccion"; request.params=[];
                request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                request.params.push({"name":"claveproduccion","value":rec.claveproduccion});
                almacen.getApplication().loadData(request,function(response){
                    console.log(response);

                    var msg = "";

                    if(response.filepath){
                        if(response.filepath.length == 1){
                            var curentFilepath = response.filepath[0];
                            console.log("Archivo a descargar: " + curentFilepath);
                            if(curentFilepath !== ""){
                                msg += "Se descargará su archivo.";
                                almacen.getApplication().downloadPedido(curentFilepath, 0); // 0 PDF 1 Excel 2 Ambos
                            }else{
                                msg += "No se pudo generar su archivo, pero el ticket ha sido impreso.";
                            }
                        }
                    }

                    if (response.status){
                        Ext.Msg.alert('Impresión', response.msg + "<br>" + msg);
                    }else{
                        Ext.Msg.alert('Error', response.msg);
                    }

                });
    },

    onGridProduccionesTrasAfterRender: function(component, eOpts) {
        component.getStore().removeAll();
        var request = new Object(); request.method="estadosproducciones"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        almacen.getApplication().loadData(request,function(response2){
            Ext.data.StoreManager.get("StoreEstadosProducciones").removeAll();
            Ext.data.StoreManager.get("StoreEstadosProducciones").loadData(response2, false);

            var request = new Object(); request.method="usuarios"; request.params=[];
            request.params.push({"name":"imei","value":almacen.getApplication().SessionId});

            almacen.getApplication().loadData(request,function(response){
                /*Ext.ComponentMgr.get("gridBusquedaCompras").getStore().loadData(response.compras);
                Ext.ComponentMgr.get("gridBusquedaCompras").getPicker().loadMask.hide();*/
                Ext.data.StoreManager.get("StoreUsuarios").removeAll();
                Ext.data.StoreManager.get("StoreUsuarios").loadData(response, false);
                var request = new Object(); request.method="consultaproducciones"; request.params=[];
                request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
                almacen.getApplication().loadData(request,function(response1){
                    console.log("response1");console.log(response1);
                    component.getStore().loadData(response1.prod, false);
                    console.log("henos aqui");
                    console.log(component.getStore().getData());
                    component.getStore().sort("claveproduccion", "ASC");
                });
            });
        });
    },

    onBtnImprimeCostoManoObraClick: function(button, e, eOpts) {
        var currentController=this;
        var request = new Object(); request.method="reporteproduccionescosto"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        //request.params.push({"name":"claveproduccion","value":0.0});
        almacen.getApplication().loadData(request,function(response){
            //currentController.muestraDialogoContenido({data:response1});
            console.log(response);
        });
    },

    onBtnNuevaProduccionClick: function(button, e, eOpts) {
        var currentController=this;
        var request = new Object(); request.method="obtieneproduccion"; request.params=[];
        request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
        request.params.push({"name":"claveproduccion","value":0.0});
        almacen.getApplication().loadData(request,function(response1){
            currentController.muestraDialogoContenido({data:response1});
        });
    },

    onBtnTerminarProduccionClick: function(button, e, eOpts) {
        var rec = this.obtieneSeleccion();
        if (rec){
            var currentController=this;
            var request = new Object(); request.method="obtieneproduccion"; request.params=[];
            request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
            request.params.push({"name":"claveproduccion","value":rec.get("claveproduccion")});
            almacen.getApplication().loadData(request,function(response1){
                currentController.muestraDialogoContenido({data:response1});
            });
        }
    },

    onBtnAvanzarProduccionClick: function(button, e, eOpts) {
        var rec = this.obtieneSeleccion();
        if (rec){
            var currentController=this;
            var request = new Object(); request.method="avanzaproduccion"; request.params=[];
            request.params.push({"name":"imei","value":almacen.getApplication().SessionId});
            request.params.push({"name":"claveproduccion","value":rec.get("claveproduccion")});
            almacen.getApplication().loadData(request,function(response1){
                //if (response)
                currentController.onGridProduccionesTrasAfterRender(Ext.ComponentMgr.get("gridProduccionesTras"),null);
            });
        }
    },

    onBtnEliminarProduccionClick: function(button, e, eOpts) {
        var rec = this.obtieneSeleccion();
        if (rec){
            var currentController = this;
            Ext.Msg.confirm("Cancelar Produccion", "¿Desea eliminar la produccion " + rec.data.claveproduccion + "?", function(buttonId) {
                if (buttonId == 'yes') {
                    var request = new Object();
                    request.method = "eliminaproduccion";
                    request.params = [];
                    request.params.push({
                        "name": "imei",
                        "value": almacen.getApplication().SessionId
                    });
                    request.params.push({
                        "name": "produccion",
                        "value": Ext.encode(rec.data)
                    });
                    almacen.getApplication().loadData(request, function(response) {
                        if (response)
                        currentController.onGridProduccionesTrasAfterRender(Ext.ComponentMgr.get("gridProduccionesTras"),null);
                    });
                }
            });

        }
    }

});
