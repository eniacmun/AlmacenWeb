{
    "type": "Ext.app.ViewController",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "dlgconsultapedido1",
        "designer|userClassName": "DlgConsultaPedidoViewController2"
    },
    "name": "DlgConsultaPedidoViewController2",
    "designerId": "d106e976-e901-4f9f-9ba7-7700efdf6494",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "opcionImpresion",
                    "button"
                ],
                "fn": "modificarPedido",
                "implHandler": [
                    "//var controller =  Ext.WindowMgr.get(\"wndDetallePedidos2\").parentController;",
                    "//controller.ModificaTraspaso({\"currentRecord\":window.currentPedido.pedidos[0]},null,null);",
                    "//if(typeof window.modificados === 'undefined'){",
                    "//    Ext.Msg.alert('Mensaje','No existen modificaciones en el pedido.');",
                    "//}else{",
                    "    if(Object.keys(window.modificados).length === 0){",
                    "        Ext.Msg.alert('Mensaje','No existen modificaciones en el pedido.');",
                    "    }else{",
                    "        // se realiza la modificacion",
                    "        var pedido_original = window.currentPedido.pedidos[0];",
                    "        var productos_originales = pedido_original.productos;",
                    "",
                    "        console.log(\"productos_originales\");console.log(productos_originales);",
                    "        /*alert(\"pausa\");",
                    "        // no se necesita actualizar los productos, ya vienen actualizados desde el grid",
                    "        for(var producto = 0; producto < productos_originales.length; producto++){",
                    "            var currentProducto = productos_originales[producto];",
                    "            console.log(\"Revisando el producto\"); console.log(currentProducto);",
                    "            if(currentProducto.claveproducto in window.modificados){",
                    "                var currentRecord = window.modificados[currentProducto.claveproducto];",
                    "                console.log(\"currentModificado\");console.log(currentRecord);",
                    "                //var currentRecord = .record;",
                    "                var new_cantidadCedi = currentRecord.get(\"CantidadCedi\");",
                    "                var new_cantidadSucursal = currentRecord.get(\"CantidadCedi\");",
                    "",
                    "                console.log(\"cantidad cambiada\");console.log(new_cantidadCedi);",
                    "                currentProducto.CantidadCedi = new_cantidadCedi;",
                    "                currentProducto.CantidadSucursal = new_cantidadSucursal;",
                    "",
                    "                //sobreescribe",
                    "                productos_originales[producto] = currentProducto;",
                    "            }",
                    "        }*/",
                    "",
                    "        console.log(\"productos_originales\");console.log(productos_originales);",
                    "",
                    "        //pedido_original.productos = productos_originales;",
                    "        var gridProductos = Ext.ComponentMgr.get(\"gridProductos2\");",
                    "        var el = gridProductos.getEl();",
                    "        el.mask('Modificando pedido, espere por favor.');",
                    "",
                    "        var request = new Object(); request.method=\"modificapedidocw\"; request.params=[];",
                    "        request.params.push({\"name\":\"imei\",\"value\":almacen.getApplication().SessionId});",
                    "        request.params.push({\"name\":\"clavepedido\",\"value\":button.currentRecord.clavePedido});",
                    "        request.params.push({\"name\":\"opcionImpresion\",\"value\":opcionImpresion});",
                    "        request.params.push({\"name\":\"pedido\",\"value\":Ext.encode(pedido_original)});",
                    "        console.log(\"Pedido\");",
                    "        console.log(Ext.encode(pedido_original));",
                    "        //window.currentPedido = null; // borrado momentaneamente",
                    "        var component = Ext.ComponentMgr.get(\"gridConsultaTraspasos2\");",
                    "        //component.getStore().removeAll();",
                    "        var currentController = this;",
                    "        almacen.getApplication().loadData(request,function(response){",
                    "",
                    "            //console.log(\"response\"); console.log(response);",
                    "            if(response.status){",
                    "                var archivos_por_imprimir = response.filepath;",
                    "                Ext.Msg.alert(\"ModificaciÃ³n\", response.msg);",
                    "                window.modificados = {}; // se limpia",
                    "",
                    "                /// Se entra a la impresion ---------------------------------",
                    "                console.log(\"henosssaquiii5552\");",
                    "                console.log(archivos_por_imprimir);",
                    "",
                    "                console.log(\"opcionImpresion: \" + opcionImpresion);",
                    "",
                    "",
                    "                console.log(\"entras aca\");",
                    "                // NOTA, se puede mejorar haciendo recursividad, tomar de ejemplo",
                    "                // la impresion al momento de FINALIZAR PEDIDO por lote.",
                    "                if(opcionImpresion == 2 ){",
                    "                    console.log(\"entras aca 2\");",
                    "                    var curentFilepath = archivos_por_imprimir[0];",
                    "                    var str = curentFilepath;",
                    "                    var rootPdf = str.substring(0,  str.indexOf(\",\"));",
                    "                    console.log(\"rootPdf\");",
                    "                    console.log(rootPdf);",
                    "                    var rootXls = str.substring(str.indexOf(\",\")+1);",
                    "                    console.log(\"rootXls\");",
                    "                    console.log(rootXls);",
                    "",
                    "                    var paths = [];",
                    "",
                    "                    paths.push(rootPdf);paths.push(rootXls);",
                    "",
                    "                    var j = 0;                     //  set your counter to 1",
                    "",
                    "                    var myLoop = function(){           //  create a loop function",
                    "                        setTimeout(function () {    //  call a 3s setTimeout when the loop is called",
                    "                            var requestprint = new Object(); requestprint.method=\"printguardapedidos\"; requestprint.params=[];",
                    "                            requestprint.params.push({\"name\":\"imei\",\"value\":almacen.getApplication().SessionId});",
                    "                            var curentFilepath = paths[j];",
                    "                            var tipoimpresion = j;",
                    "                            almacen.getApplication().loadData(requestprint,function(response2){",
                    "                                console.log(\"imprimiendo: \" + curentFilepath);",
                    "                                almacen.getApplication().downloadPedido(curentFilepath, tipoimpresion);",
                    "                            });",
                    "",
                    "                            j++;                     //  increment the counter",
                    "",
                    "                            if (j < paths.length) {            //  if the counter < 10, call the loop function",
                    "                                myLoop();             //  ..  again which will trigger another",
                    "                            }                        //  ..  setTimeout()",
                    "                        }, 5000);",
                    "                    };",
                    "",
                    "                    myLoop();                      //  start the loop",
                    "",
                    "                } else{",
                    "                    if(opcionImpresion > -1){",
                    "                        console.log(\"entras aca 3\");",
                    "                        var curentFilepath = archivos_por_imprimir[0];",
                    "                        console.log(\"curentFilepath: \" + curentFilepath);",
                    "                        //  almacen.getApplication().loadData(requestprint,function(response2){",
                    "                        //      console.log(\"imprimiendo: \" + curentFilepath);",
                    "                        almacen.getApplication().downloadPedido(curentFilepath, opcionImpresion);",
                    "                        //    });",
                    "                    }",
                    "                }",
                    "                // FIN DE LA IMPRESION ---------------------------------",
                    "                // Se pasa el flujo al controlador padre, para que se pueda cerrar esta ventana",
                    "                var controller =  Ext.WindowMgr.get(\"wndDetallePedidos2\").parentController;",
                    "                window.currentPedido = null; // se limpia por que se regresa a la pantalla anterior",
                    "                controller.ModificaTraspaso();",
                    "            }else{",
                    "                Ext.Msg.alert(\"Error en Modificar\", response.msg);",
                    "            }",
                    "",
                    "            el.unmask();",
                    "",
                    "        },function(response){",
                    "            el.unmask();",
                    "",
                    "        });",
                    "",
                    "",
                    "    }",
                    "//}"
                ]
            },
            "name": "modificarPedido",
            "designerId": "86c589f0-d2e1-4f94-bc8f-d9fb34bae611"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "motivo"
                ],
                "fn": "recibePedido",
                "implHandler": [
                    "if(typeof motivo !== 'undefined' && motivo !== null && motivo !== ''){",
                    "    window.currentPedido.pedidos[0].motivo = motivo;",
                    "}",
                    "",
                    "console.log(\"window.currentPedido.pedidos[0]\");",
                    "console.log(window.currentPedido.pedidos[0]);",
                    "",
                    "var controller =  Ext.WindowMgr.get(\"wndDetallePedidos2\").parentController;",
                    "controller.RecibeTraspaso({\"currentRecord\":window.currentPedido.pedidos[0]},null,{wnd:Ext.WindowMgr.get(\"wndDetallePedidos\")}); // Completo"
                ]
            },
            "name": "recibePedido",
            "designerId": "a4fc4b0d-c882-4cb1-9a4e-2bd496b278a5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "currentController",
                    "correctRecords"
                ],
                "fn": "gestionaCorreos",
                "implHandler": [
                    "this.enviaOrden(currentController, correctRecords);"
                ]
            },
            "name": "gestionaCorreos",
            "designerId": "4ff8278a-7e1a-4787-931b-7dc2fe4e5093"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "currentController",
                    "correoRecords"
                ],
                "fn": "enviaOrden",
                "implHandler": [
                    "console.log(\"enviaorden\");",
                    "console.log(window.currentPedido.pedidos[0]);",
                    "",
                    "",
                    "var winBusquedaCompra = Ext.ComponentMgr.get(\"gridProductos2\");",
                    "var el = winBusquedaCompra.getEl();",
                    "el.mask('Enviando orden, por favor espere');",
                    "",
                    "var request = new Object(); request.method=\"enviarorden\"; request.params=[];",
                    "request.params.push({\"name\":\"imei\",\"value\":almacen.getApplication().SessionId});",
                    "request.params.push({\"name\":\"pedido\",\"value\":Ext.encode(window.currentPedido.pedidos[0])});",
                    "",
                    "",
                    "// Se copia el objeto para poder modificar la propiedad de fechaRegistro, pues es un date y necesita string",
                    "var recordTemp = Object.assign({}, window.currentPedido.pedidos[0]);",
                    "recordTemp.fechaRegistro = Ext.Date.format(new Date(recordTemp.fechaRegistro),'d/m/Y H:i:s');",
                    "",
                    "var a = {};",
                    "",
                    "if(typeof correoRecords !== 'undefined'){",
                    "    if(correoRecords.length > 0){",
                    "        var correos = [];",
                    "        for(var iter = 0; iter < correoRecords.length; iter++){",
                    "            var currentRecord = correoRecords[iter];",
                    "            console.log(\"currentRecord\");",
                    "            console.log(currentRecord);",
                    "            console.log(currentRecord.get(\"label\"));",
                    "            if(currentRecord.get(\"label\") !== ''){",
                    "                correos.push({",
                    "                    \"label\" : currentRecord.get(\"label\"),",
                    "                    \"value\" : currentRecord.get(\"value\"),",
                    "                });",
                    "            }",
                    "        }",
                    "        a.correos = correos;",
                    "        request.params.push({\"name\":\"correos\",\"value\":Ext.encode(a)});",
                    "    }",
                    "}",
                    "",
                    "console.log(request);",
                    "",
                    "almacen.getApplication().loadData(request,function(response){",
                    "    console.log(response);",
                    "    el.unmask();",
                    "}, function(response){",
                    "    el.unmask();",
                    "    Ext.Msg.alert(\"Error\", response.msg);",
                    "});"
                ]
            },
            "name": "enviaOrden",
            "designerId": "64336464-7473-489c-8dd6-3c817fbf3c40"
        }
    ]
}