{
    "type": "Ext.app.ViewController",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "dlguploadcompra",
        "designer|userClassName": "DlgUploadCompraViewController"
    },
    "designerId": "eea4e80b-45ca-4044-b80f-95cf70e99e84",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#btnUploadCompra",
                "designer|targetType": "Ext.button.Button",
                "fn": "SubirCompra",
                "implHandler": [
                    "    this.ProcesaCompraXML(null);"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "SubirCompra",
            "designerId": "83795c7b-e597-4b60-904a-94cfb589496d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "recProducto"
                ],
                "fn": "MuestraDialogoAsociar",
                "implHandler": [
                    "    //if(!recProducto.get(\"xmlModificaProporcion\")) return false;",
                    "    var wnd = Ext.create(\"almacen.view.DlgAsociarProducto\", {id:\"wndAsociaProducto\"});",
                    "        wnd.currentRecord=recProducto;",
                    "        wnd.currentController=this;",
                    "        wnd.center();",
                    "        wnd.show();",
                    "        Ext.ComponentMgr.get(\"fldProporcion\").setValue(recProducto.get(\"xmlProporcionExterna\"));",
                    ""
                ]
            },
            "name": "MuestraDialogoAsociar",
            "designerId": "077cc24c-ca5b-4a3b-9d20-f2ae023d56b9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "actualizaIVA",
                "implHandler": [
                    "console.log(\"------------------------------\");",
                    "console.log(\"------- actualiza IVA --------\");",
                    "console.log(\"------------------------------\");",
                    "IvaAsignar=window.currentXxml.xmlIVAAsignar;",
                    "IEPSAsignar=window.currentXxml.xmlIEPSAsignar;",
                    "",
                    "var IEAsignar=window.currentXxml.xmlIEAsignar;",
                    "console.log(\"IEAsignar = \" + IEAsignar);",
                    "",
                    "var porcentajeIE=0.0;",
                    "",
                    "Procesados = {};",
                    "Procesados1 = {};",
                    "TotalProductosAsignar=0;",
                    "Ext.ComponentMgr.get(\"gridXml\").getStore().each(function(rec){",
                    "    console.log(\"-------------- Producto ----------->\");",
                    "    if(rec.modified && rec.modified.Impuesto){",
                    "        var ImpuestoRec = parseFloat(rec.get(\"Impuesto\"));",
                    "        var ImpuestoModified = parseFloat(rec.modified.Impuesto);",
                    "        if(ImpuestoRec != ImpuestoModified){",
                    "            rec.set(\"ImpuestoAnterior\", ImpuestoModified);",
                    "        }",
                    "    }",
                    "    ImpuestoTotal=0;",
                    "    IEPS = almacen.getApplication().calculaIEPS(rec.get(\"tasa\"), rec.get(\"cantidad\"), rec.get(\"costoUnitario\"),rec.get(\"Descuento\"),rec.get(\"Impuesto\"));",
                    "    console.log(\"IEPS = \" + IEPS);",
                    "    porcentajeIE=rec.get(\"ie\");",
                    "    if ((rec.get(\"xmlProporcionExterna\")<=0)) TotalProductosAsignar++;",
                    "    TasaIVA = parseFloat(rec.get(\"Impuesto\"));",
                    "    if(TasaIVA > 0 ){",
                    "        rec.set(\"tieneImpuesto\", true);",
                    "    } else {",
                    "        rec.set(\"tieneImpuesto\", false);",
                    "    }",
                    "    Precio=rec.get(\"importe\");",
                    "    var IECalculado=(Precio) * (porcentajeIE/100);",
                    "    IEAsignar -= IECalculado;",
                    "    console.log(\"IECalculado = \" + IECalculado);",
                    "    console.log(\"IEAsignar = \" + IEAsignar);",
                    "    if (rec.get(\"tieneImpuesto\") && !Procesados[rec.get(\"xmlNoIdentificacion\") + rec.get(\"claveBarra\")] ){",
                    "        Procesados[rec.get(\"xmlNoIdentificacion\") + rec.get(\"claveBarra\")]=true;",
                    "        Impuesto = 0;",
                    "        PrecioTotal=rec.get(\"importe\");",
                    "        TasaIVA = parseFloat(rec.get(\"Impuesto\"));",
                    "        Impuesto = (PrecioTotal+IEPS+IECalculado) * (TasaIVA/100);",
                    "        ImpuestoTotal+=Impuesto;",
                    "        IvaAsignar -= Impuesto;",
                    "        console.log(\"Impuesto = \" + Impuesto);",
                    "    }",
                    "    if (IEPS > 0 && !Procesados1[rec.get(\"xmlNoIdentificacion\") + rec.get(\"claveBarra\")]){",
                    "        Procesados1[rec.get(\"xmlNoIdentificacion\") + rec.get(\"claveBarra\")]=true;",
                    "        IEPSAsignar -= IEPS;",
                    "        console.log(\"IepsAsignar = \" + IEPSAsignar);",
                    "    }",
                    "});",
                    "",
                    "Ext.ComponentMgr.get(\"fldIVA\").setValue(IvaAsignar);",
                    "Ext.ComponentMgr.get(\"fldPRODS\").setValue(TotalProductosAsignar);",
                    "",
                    "if (TotalProductosAsignar>0)",
                    "    Ext.ComponentMgr.get(\"fldPRODS\").setFieldStyle(\"color: red;\");",
                    "else",
                    "    Ext.ComponentMgr.get(\"fldPRODS\").setFieldStyle(\"color: green;\");",
                    "",
                    "",
                    "",
                    "if ((IvaAsignar >= 1) || (IvaAsignar <= -1))",
                    "    Ext.ComponentMgr.get(\"fldIVA\").setFieldStyle(\"color: red;\");",
                    "else",
                    "    Ext.ComponentMgr.get(\"fldIVA\").setFieldStyle(\"color: green;\");",
                    "",
                    "Ext.ComponentMgr.get(\"fldIEPS\").setValue(IEPSAsignar);",
                    "if ((IEPSAsignar >= 1) || (IEPSAsignar <= -1))",
                    "    Ext.ComponentMgr.get(\"fldIEPS\").setFieldStyle(\"color: red;\");",
                    "else",
                    "    Ext.ComponentMgr.get(\"fldIEPS\").setFieldStyle(\"color: green;\");",
                    "",
                    "Ext.ComponentMgr.get(\"fldIE\").setValue(IEAsignar);",
                    "if ((IEAsignar >= 1) || (IEAsignar <= -1))",
                    "    Ext.ComponentMgr.get(\"fldIE\").setFieldStyle(\"color: red;\");",
                    "else",
                    "    Ext.ComponentMgr.get(\"fldIE\").setFieldStyle(\"color: green;\");"
                ]
            },
            "name": "actualizaIVA",
            "designerId": "dfa6afe4-695e-4843-809c-f6499258bee3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "compraXML"
                ],
                "fn": "ProcesaCompraXML",
                "implHandler": [
                    "currentController=this;",
                    "",
                    "// carga IVA",
                    "cmbStoreiva = Ext.StoreManager.get(\"StoreComboImpuestos\");",
                    "",
                    "var request = new Object(); request.method=\"impuestos\"; request.params=[];",
                    "request.params.push({\"name\":\"imei\",\"value\":almacen.getApplication().SessionId});",
                    "almacen.getApplication().loadData(request,function(response){",
                    "    console.log(\"response\");",
                    "    console.log(response);",
                    "    cmbStoreiva.removeAll();",
                    "    cmbStoreiva.loadData(response.items);",
                    "",
                    "",
                    "    cmbStore = Ext.StoreManager.get(\"StoreTasasIEPS\");",
                    "",
                    "",
                    "    var request = new Object(); request.method=\"listaieps\"; request.params=[];",
                    "    request.params.push({\"name\":\"imei\",\"value\":almacen.getApplication().SessionId});",
                    "",
                    "    almacen.getApplication().loadData(request,function(response){",
                    "        console.log(\"response\");",
                    "        console.log(response);",
                    "        cmbStore.removeAll();",
                    "        cmbStore.loadData(response);",
                    "        Ext.getStore(\"StoreComboProductos\").removeAll();",
                    "        var request = new Object();",
                    "        request.method=\"productoscompra\";",
                    "        request.params=[];",
                    "        request.params.push({\"name\":\"imei\",\"value\":almacen.getApplication().SessionId},",
                    "                            {\"name\":\"clasificacion\",\"value\":\"\"});",
                    "",
                    "        almacen.getApplication().loadData(request,function(response){",
                    "            console.log(\"response productoscompra\");",
                    "            console.log(response);",
                    "            Ext.getStore(\"StoreComboProductos\").loadData(response.productos);",
                    "            Ext.getStore(\"StoreComboProductos\").sort('nombreproducto','ASC');",
                    "            //Ext.ComponentMgr.get(\"comboProducto\").getPicker().loadMask.hide();",
                    "",
                    "        });",
                    "        window.currentXxml=null;",
                    "        window.currentCompraXML = null;",
                    "        console.log('URL');",
                    "",
                    "        console.log(almacen.getApplication().Url);",
                    "        Ext.ComponentMgr.get(\"gridXml\").mask(\"Cargando CFDI, espere por favor...\");",
                    "        Ext.ComponentMgr.get(\"gridXml\").getStore().removeAll();",
                    "        console.log('Se empézara a subir');",
                    "        var iUploadCompra = '1';",
                    "        //if (document.getElementById(\"compraXML\"))",
                    "        //   document.getElementById(\"compraXML\").value=null;",
                    "        var oParams  = {};",
                    "",
                    "",
                    "        if (compraXML){",
                    "            var rCompra = Ext.encode(compraXML);",
                    "            //if (!document.getElementById(\"compraXML\"))",
                    "            //    Ext.ComponentMgr.get(\"frmUpload\").getForm().getEl().createChild({tag:'input',type:'hidden',name:'compraXML',id:'compraXML'});",
                    "",
                    "            iUploadCompra = '2';",
                    "            window.currentCompraXML = compraXML;",
                    "            oParams[\"compraXML\"] = rCompra;",
                    "            var oLblCompra = \"UUID: \" + compraXML.UUID_CFDI + \" PROV: \" + compraXML.NOMBRE_PROVEEDOR;",
                    "            Ext.ComponentMgr.get(\"lblCFDISeleccionado\").setText(oLblCompra);",
                    "        }",
                    "        oParams[\"uploadcompra\"] =iUploadCompra;",
                    "",
                    "        Ext.ComponentMgr.get(\"frmUpload\").getForm().submit({",
                    "            clientValidation: true,",
                    "            url: almacen.getApplication().Url,",
                    "            params:oParams,",
                    "            success: function(form, action) {",
                    "                console.log(action.result);",
                    "                if (action.result.compraXML){",
                    "                    window.currentCompraXML =  action.result.compraXML;",
                    "                    var oLblCompra1 = \"UUID: \" + window.currentCompraXML.UUID_CFDI + \" PROV: \" + window.currentCompraXML.NOMBRE_PROVEEDOR;",
                    "                    Ext.ComponentMgr.get(\"lblCFDISeleccionado\").setText(oLblCompra1);",
                    "                }",
                    "",
                    "",
                    "                window.currentXxml=action.result;",
                    "                Ext.ComponentMgr.get(\"fldIE\").setValue(action.result.xmlIEAsignar);",
                    "                Ext.ComponentMgr.get(\"fldIE\").setFieldStyle(action.result.xmlIEAsignar > 0 ?\"color: red;\" : \"color: green;\");",
                    "                Ext.ComponentMgr.get(\"fldIVA\").setValue(action.result.xmlIVAAsignar);",
                    "                Ext.ComponentMgr.get(\"fldIVA\").setFieldStyle(action.result.xmlIVAAsignar > 0 ?\"color: red;\" : \"color: green;\");",
                    "                Ext.ComponentMgr.get(\"fldIEPS\").setValue(action.result.xmlIEPSAsignar);",
                    "                Ext.ComponentMgr.get(\"fldIEPS\").setFieldStyle(action.result.xmlIEPSAsignar > 0 ?\"color: red;\" : \"color: green;\");",
                    "                Ext.ComponentMgr.get(\"fldRetencion\").setValue(action.result.xmlRetencionAsignar);",
                    "                Ext.ComponentMgr.get(\"fldRetencion\").setFieldStyle(action.result.xmlRetencionAsignar > 0 ?\"color: black;\" : \"color: black;\");",
                    "                Ext.ComponentMgr.get(\"gridXml\").getStore().loadData(action.result.productosCompraAgregar);",
                    "                Ext.ComponentMgr.get(\"gridXml\").unmask();",
                    "                currentController.actualizaIVA();",
                    "",
                    "            },",
                    "            failure: function(form, action) {",
                    "                Ext.ComponentMgr.get(\"gridXml\").unmask();",
                    "                switch (action.failureType) {",
                    "                    case Ext.form.action.Action.CLIENT_INVALID:",
                    "                        Ext.Msg.alert('Failure1', 'Form fields may not be submitted with invalid values');",
                    "                        break;",
                    "                    case Ext.form.action.Action.CONNECT_FAILURE:",
                    "                        Ext.Msg.alert('Failure2', 'Ajax communication failed');",
                    "                        break;",
                    "                    case Ext.form.action.Action.SERVER_INVALID:",
                    "                        Ext.Msg.alert('Failure', action.result.msg);",
                    "                        break;",
                    "                    default:",
                    "                        Ext.Msg.alert('Failure', action.result.msg);",
                    "                        break;",
                    "",
                    "                }",
                    "            }",
                    "        });",
                    "    });",
                    "",
                    "});"
                ]
            },
            "name": "ProcesaCompraXML",
            "designerId": "86321d74-fc54-46b4-b3ac-37a3d1fdd944"
        }
    ]
}